var h=Object.defineProperty;var b=(i,e,t)=>e in i?h(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var l=(i,e,t)=>(b(i,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();class u{constructor(e,t){l(this,"visible",!1);l(this,"locked",!1);l(this,"color","");l(this,"row",0);l(this,"col",0);this.row=e,this.col=t}getActive(){return this.active}getVisible(){return this.visible}getLocked(){return this.locked}getRow(){return this.row}getCol(){return this.col}getColor(){return this.color}setCol(e){this.col!==e&&(this.col=e)}setRow(e){this.row!==e&&(this.row=e)}setPosition(e,t){this.setRow(e),this.setCol(t)}setColor(e){this.color=e}setActive(e){this.active=e}setVisible(e){this.visible=e}setLocked(e){this.locked=e}toggleActive(){this.active=!this.active}toggleVisible(){this.visible=!this.visible}toggleLocked(){this.locked=!this.locked}}class n{constructor(e,t){l(this,"rows",2);l(this,"cols",2);l(this,"gameStatus","setup");l(this,"boardStatus",[]);l(this,"clicks",0);l(this,"time",0);l(this,"timer",null);this.rows=e,this.cols=t}restart(){let e=this.getGame();if(e){let t=[];console.log("[restart] status",e),console.log("[restart] status.boardStatus",e.boardStatus),e.boardStatus.forEach(r=>{r.forEach(o=>{let s=new u(o.row,o.col);s.setColor(o.color),s.setVisible(o.visible),s.setLocked(o.locked),t[o.row]=t[o.row]||[],t[o.row][o.col]=s})}),console.log("[restart] newBoardStatus",t),this.boardStatus=t,this.gameStatus=e.gameStatus,this.clicks=e.clicks,this.time=e.time,this.cols=e.cols,this.rows=e.rows}this.boardStatus.forEach(t=>{t.forEach(r=>{this.generateCard(r.row,r.col,r.color)})}),this.createBoard(),this.startGame()}init(){let e=document.querySelector("#double-trouble #game-cols");this.updateCols(parseInt(e.value));let t=document.querySelector("#double-trouble #game-rows");this.updateRows(parseInt(t.value)),this.checkGame()&&this.prepareGame()}updateRows(e){this.rows!==e&&e>1&&(this.rows=e)}updateCols(e){this.cols!==e&&e>1&&(this.cols=e)}checkGame(){return this.rows==1&&this.cols==2||this.rows==2&&this.cols==1?(alert("¿En serio? Un juego de una pareja. ¡Eres el rey de la diversión!"),!1):this.rows==1&&this.cols==1?(alert("¿En serio? ¿Un juego de parejas con una sola carta? ¡Venga ya!"),!1):this.rows*this.cols%2!==0?(alert("El juego tiene que tener un número par de cartas... ¡Esto es un juego de parejas! Aquí no vale traer de carabina a un amigo imaginario."),!1):!0}prepareGame(){this.gameStatus="playing",this.generateBoard(),this.startGame()}startGame(){this.createBoard(),this.showBoard(),this.updateScoreboard(),this.updateBoard(),this.timer=setInterval(()=>{this.time++,this.updateScoreboard(),this.saveGame()},1e3)}resetGame(){this.boardStatus=[],this.gameStatus="setup";let e=document.querySelector("#double-trouble #board");e&&e.remove();let t=document.querySelector("#double-trouble #scoreboard");t&&t.remove(),clearInterval(this.timer),this.clicks=0,this.time=0,this.deleteGame(),this.showSetup()}createBoard(){if(!document.querySelector("#double-trouble #board")){let t=document.createElement("div");t.id="board",t.classList.add("c-board"),t.style.gridTemplateColumns=`repeat(${this.cols}, 1fr)`,t.style.gridTemplateRows=`repeat(${this.rows}, 1fr)`,document.querySelector("#double-trouble #setup").insertAdjacentElement("afterend",t)}}generateBoard(){this.createBoard();let e=this.generateColors();e=[...e,...e],e.sort(()=>Math.random()-.5);for(let t=0;t<this.rows;t++){this.boardStatus[t]=[];for(let r=0;r<this.cols;r++){let o=e[t*this.cols+r],s=this.generateCard(t,r,o);this.boardStatus[t][r]=s}}}generateCard(e,t,r){let o=new u(e,t);o.setColor(r);let s=document.createElement("div");s.classList.add("c-card"),s.dataset.row=o.getRow(),s.dataset.col=o.getCol(),s.style.backgroundColor=o.getColor(),s.dataset.visible=o.getVisible(),s.dataset.locked=o.getLocked();let a=document.createElement("div");a.classList.add("c-card__front"),s.appendChild(a);let c=document.createElement("div");return c.classList.add("c-card__back"),s.appendChild(c),s.addEventListener("click",d=>{this.countClick(),d.target.classList.contains("c-card")?(console.log("[createBoard] card clicked",d.target),this.flipCard(d.target)):(console.log("[createBoard] card clicked",d.target.closest(".c-card")),this.flipCard(d.target.closest(".c-card")))}),this.createBoard(),document.querySelector("#double-trouble #board").appendChild(s),o}updateScoreboard(){let e=this.clicks,t=this.boardStatus.flat().filter(r=>!r.getLocked()).length/2;if(document.querySelector("#double-trouble #scoreboard"))document.querySelector("#double-trouble #time").innerText=this.getTimestap(),document.querySelector("#double-trouble #clicks").innerText=e,document.querySelector("#double-trouble #remaining").innerText=t;else{let r=`
					<div class="c-score" id="scoreboard">
						<div class="c-score__item">
							<div class="c-score__time">
								Tiempo: <span id="time">${this.getTimestap()}</span>
							</div>
						</div>

						<div class="c-score__item">
							<div class="c-score__clicks">
								Clicks: <span id="clicks">${e}</span>
							</div>
						</div>

						<div class="c-score__item">
							<div class="c-score__remaining">
								Quedan: <span id="remaining">${t}</span>
							</div>
						</div>

						<div class="c-score__item">
							<button id="js-restart-game">Reiniciar</button>
						</div>
					</div>
				`;document.querySelector("#double-trouble #board").insertAdjacentHTML("beforebegin",r),document.querySelector("#double-trouble #js-restart-game").addEventListener("click",o=>{this.resetGame()})}}flipCard(e){let t=parseInt(e.dataset.row),r=parseInt(e.dataset.col);if(this.boardStatus[t][r].getLocked()===!0)return;this.boardStatus[t][r].getVisible()?this.boardStatus[t][r].setVisible(!1):this.boardStatus[t][r].setVisible(!0);let o=this.boardStatus.flat().filter(a=>a.getVisible()&&!a.getLocked());if(o.length===2){const[a,c]=o;a.getColor()===c.getColor()?(a.setLocked(!0),c.setLocked(!0)):setTimeout(()=>{a.setVisible(!1),c.setVisible(!1),this.updateBoard()},1e3)}else o.length>2&&o.forEach(a=>{a.getLocked()===!1&&a.setVisible(!1)});if(this.updateBoard(),this.boardStatus.flat().filter(a=>a.getLocked()).length===this.rows*this.cols){alert("¡Enhorabuena! Has encontrado todas las parejas");let a=prompt("¿Cuál es tu nombre?");a&&alert(`¡Enhorabuena, ${a}! Has encontrado todas las parejas`),this.resetGame()}}updateBoard(){this.boardStatus.forEach(e=>{e.forEach(t=>{let r=document.querySelector(`#double-trouble #board .c-card[data-row="${t.getRow()}"][data-col="${t.getCol()}"]`);t.getVisible()?r.classList.add("active"):r.classList.remove("active")})})}showBoard(){document.querySelector("#double-trouble #setup")&&document.querySelector("#double-trouble #setup").classList.add("hidden"),document.querySelector("#double-trouble #board")&&document.querySelector("#double-trouble #board").classList.remove("hidden")}showSetup(){document.querySelector("#double-trouble #setup")&&document.querySelector("#double-trouble #setup").classList.remove("hidden"),document.querySelector("#double-trouble #board")&&document.querySelector("#double-trouble #board").classList.add("hidden")}generateColors(){let e=new Set;for(;e.size<this.rows*this.cols/2;){let t=this.getRandomColor();e.add(t)}return console.log("[generateColors] colors",e),e}getRandomColor(){let e="0123456789ABCDEF",t="#";for(let r=0;r<6;r++)t+=e[Math.floor(Math.random()*16)];return t}hideCards(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.cols;t++)this.boardStatus[e][t].setVisible(!1);this.updateBoard()}getTimestap(){let e=new Date(this.time*1e3);var t=e.getUTCHours(),r=e.getUTCMinutes(),o=e.getSeconds();t<10&&(t="0"+t),r<10&&(r="0"+r),o<10&&(o="0"+o);var s=t+":"+r+":"+o;return s}countClick(){this.clicks+=1}saveGame(){localStorage.setItem("double-trouble",JSON.stringify({rows:this.rows,cols:this.cols,boardStatus:this.boardStatus,clicks:this.clicks,time:this.time}))}deleteGame(){localStorage.getItem("double-trouble")&&localStorage.removeItem("double-trouble")}getGame(){return localStorage.getItem("double-trouble")?JSON.parse(localStorage.getItem("double-trouble")):!1}}function m(){document.addEventListener("DOMContentLoaded",i=>{let e=document.querySelector("#double-trouble #js-init-game");if(e||alert("El juego no ha cargado correctamente. Por favor, recarga la página."),localStorage.getItem("double-trouble")){let t=JSON.parse(localStorage.getItem("double-trouble"));new n(t.rows,t.cols).restart()}e.addEventListener("click",t=>{t.preventDefault();let r=parseInt(document.querySelector("#double-trouble #game-rows").value),o=parseInt(document.querySelector("#double-trouble #game-cols").value);var s=new n(r,o);s.init()})})}m();
